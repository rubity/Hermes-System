// // const express = require('express');
// // const bodyParser = require('body-parser');
// // const app = express();

// // app.use(bodyParser.urlencoded({ extended: true })); 

// // app.post('/', (req, res) => {
// //   console.log('teste')
// //   res.send(`Full name is`);
// // });

// // app.get('/', (req, res) => {
// //   res.send('Wiki home page');
// // })

// //const port = 8079;

// // app.listen(port, () => {
// //   console.log(`Server running on port${port}`);
// // });

// /////////////////////////////////

// // var http = require('http');

// // //create a server object:
// // http.createServer(function (req, res) {
// //   res.write('Hello World!'); //write a response to the client
// //   res.end(); //end the response
// // }).listen(8079); //the server object listens on port 8080 

// ///////////////

// const http = require('http')

// const data =
//   '{"xrdMeasurements": {"@xmlns": "http://www.xrdml.com/XRDMeasurement/1.5", "@xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance", "@xsi:schemaLocation": "http://www.xrdml.com/XRDMeasurement/1.5 http://www.xrdml.com/XRDMeasurement/1.5/XRDMeasurement.xsd", "@status": "Completed", "comment": {"entry": ["Configuration=spinner, Owner=User-1, Creation date=08/08/2019 11:45:38", "Goniometer=PW3050/60 (Theta/Theta); Minimum step size 2Theta:0.001; Minimum step size Omega:0.001", "Sample stage=Reflection-Transmission Spinner PW3064/60; Minimum step size Phi:0.1", "Diffractometer system=XPERT-PRO", "Measurement program=C:\\PANalytical\\Data Collector\\Programs\\Cliente\\Exemplo 1.xrdmp, Identifier={9F20A01E-78CD-4597-B2FF-D8EF7A62EF62}"]}, "sample": {"@type": "To be analyzed", "id": null, "name": null, "preparedBy": null}, "xrdMeasurement": {"@measurementType": "Scan", "@status": "Completed", "@sampleMode": "Reflection", "comment": {"entry": null}, "usedWavelength": {"@intended": "K-Alpha 1", "kAlpha1": {"@unit": "Angstrom", "#text": "1.5405980"}, "kAlpha2": {"@unit": "Angstrom", "#text": "1.5444260"}, "kBeta": {"@unit": "Angstrom", "#text": "1.3922500"}, "ratioKAlpha2KAlpha1": "0.5000"}, "incidentBeamPath": {"radius": {"@unit": "mm", "#text": "240.00"}, "deg", "#text": "6.0"}}}, "sollerSlit": {"@id": "21010002", "@name": "Soller slits 0.04 rad.", "opening": {"@unit": "rad", "#text": "0.0400"}}, "mask": {"@id": "22080002", "@name": "Fixed incident beam mask 10 mm", "width": {"@unit": "mm", "#text": "6.60"}}, "divergenceSlit": {"@id": "22010007", "@name": "Fixed slit 1/8\u00b0", "@xsi:type": "fixedDivergenceSlitType", "distanceToSample": {"@unit": "mm", "#text": "140.00"}, "height": {"@unit": "mm", "#text": "0.19"}}}, "beamKnife": {"@id": "29010002", "@name": "Beam knife for MPD systems"}, "diffractedBeamPath": {"radius": {"@unit": "mm", "#text": "240.00"}, "antiScatterSlit": {"@id": "22110006", "@name": "AS slit 6.4 mm (PIXcel & Monochr.)", "@xsi:type": "fixedAntiScatterSlitType", "height": {"@unit": "mm", "#text": "6.40"}}, "sollerSlit": {"@id": "21010002", "@name": "Soller slits 0.04 rad.", "opening": {"@unit": "rad", "#text": "0.0400"}}, "monochromator": {"@id": "23010033", "@name": "Diffracted beam monochr. for PIXcel and Cu", "@hybrid": "false", "crystal": {"@type": "Symmetric", "@shape": "Flat", "#text": "C"}, "numberOfReflections": "1", "hkl": {"h": "0", "k": "0", "l": "2"}}, "detector": {"@id": "7010015", "@name": "PIXcel1D detector", "@xsi:type": "rtmsDetectorType", "phd": {"lowerLevel": {"@unit": "%", "#text": "25.0"}, "upperLevel": {"@unit": "%", "#text": "70.0"}}, "mode": "Scanning", "activeLength": {"@unit": "deg", "#text": "3.347"}}}, "scan": {"@appendNumber": "0", "@mode": "Continuous", "@scanAxis": "Gonio", "@status": "Completed", "header": {"startTimeStamp": "2019-08-26T11:38:08-03:00", "endTimeStamp": "2019-08-26T12:08:17-03:00", "author": {"name": "user"}, "source": {"applicationSoftware": {"@version": "4.1", "#text": "Data Collector"}, "instrumentControlSoftware": {"@version": "2.2 ", "#text": "XPERT-PRO"}, "instrumentID": "0000000011123213"}}, "dataPoints": {"positions": [{"@axis": "2Theta", "@unit": "deg", "startPosition": "3.00713028", "endPosition": "49.98728108"}, {"@axis": "Omega", "@unit": "deg", "startPosition": "1.50356514", "endPosition": "24.99364054"}, {"@axis": "Phi", "@unit": "deg", "commonPosition": "116.2"}], "commonCountingTime": {"@unit": "seconds", "#text": "236.640"}, "intensities": {"@unit": "counts", "#text": "327 300 349 281 293 270 255 270 284 268 262 270 247 243 250 248 229 218 265 255 253 209 227 237 204 213 179 178 186 192 180 184 178 159 173 179 155 160 165 177 152 183 161 133 132 135 149 136 168 157 139 147 132 142 131 131 137 143 140 141 123 129 156 128 142 132 132 142 159 147 153 149 153 139 152 159 168 154 168 206 189 172 152 178 192 201 214 209 231 232 227 217 179 181 167 139 138 116 134 119 147 136 119 139 124 121 123 116 130 134 130 154 117 133 133 134 138 130 133 151 122 122 131 131 119 115 154 127 153 145 153 138 160 168 172 164 173 200 227 211 273 278 333 457 617 744 869 782 543 343 250 212 177 152 159 145 175 171 176 151 146 131 146 165 160 167 160 151 146 149 146 147 132 160 162 128 138 154 172 154 149 131 185 162 163 168 180 179 160 177 149 161 160 160 156 147 158 195 182 206 202 223 248 294 298 278 266 238 182 172 180 174 141 164 146 154 157 163 187 159 139 160 152 161 165 162 171 188 153 157 144 191 146 152 174 179 154 183 160 167 179 176 167 146 183 175 173 182 212 205 248 277 316 313 327 310 253 207 200 185 183 170 157 167 189 159 175 182 173 203 162 156 182 184 207 276 247 304 412 560 765 1154 1651 2337 2504 1647 689 343 232 222 170 199 168 205 200 188 164 176 143 164 174 192 154 181 157 209 167 167 171 158 175 183 207 199 206 204 253 297 368 435 590 665 664 444 256 234 162 198 205 186 186 174 185 206 204 222 218 218 238 207 196 182 189 209 178 184 196 168 187 176 181 184 166 187 164 197 168 168 199 186 200 168 185 176 154 194 216 210 189 196 194 210 197 192 235 209 225 251 251 256 285 324 379 378 459 518 613 697 655 645 506 407 386 326 327 282 264 272 255 283 294 310 335 348 399 423 453 509 475 482 500 435 370 341 349 328 309 339 331 328 363 345 312 326 338 357 340 362 406 401 420 514 513 674 751 946 1372 1903 2536 3829 4835 6084 6487 5033 3024 1573 749 608 521 418 418 416 383 413 415 395 383 413 403 423 386 419 379 430 471 397 436 456 475 431 390 371 379 407 376 395 378 383 426 439 449 496 492 465 423 386 372 366 390 376 379 359 371 414 403 420 486 434 519 470 444 430 423 387 400 367 363 343 389 418 348 409 393 432 410 405 489 498 615 789 969 1309 1680 2290 2852 2985 2417 1626 1115 924 792 796 652 603 474 468 428 402 423 370 392 357 323 358 385 389 421 390 452 400 462 415 403 363 333 336 339 308 339 318 312 315 313 337 315 316 297 354 364 344 350 332 309 320 321 307 334 360 342 344 357 374 380 349 429 432 463 513 561 658 752 1027 1326 1753 2279 3107 4422 6023 8070 10051 10563 8436 5528 3146 2011 1725 1768 1797 1709 1535 1507 1632 1610 1601 1399 1048 810 598 507 481 503 509 514 628 609 640 692 637 614 552 562 594 637 635 708 662 609 490 492 407 434 401 414 399 446 417 451 504 480 501 527 490 540 538 576 684 762 909 1181 1452 1914 2349 3198 4029 4149 3357 2259 1591 1013 929 918 895 948 933 910 807 798 740 721 785 897 1050 1279 1710 2267 2865 3605 4226 5137 5652 5090 3724 2425 1430 917 758 692 657 634 595 630 679 683 689 809 996 1130 1335 1618 2066 2577 3017 3087 2616 1972 1539 1212 1087 1090 1045 951 905 807 805 802 800 788 811 840 844 891 939 955 945 1016 1012 957 1032 1118 1061 1034 1101 1151 1128 1221 1299 1333 1464 1411 1425 1355 1139 1182 1064 1041 1059 1082 1050 1098 1045 936 993 1058 1085 1009 1111 1191 1364 1561 2017 2501 3196 4232 5709 7379 9026 10156 9291 6641 4626 2575 1509 1072 890 862 799 729 671 669 679 647 644 620 632 597 530 539 496 487 439 447 450 421 448 458 440 492 505 516 542 575 618 594 632 560 579 571 564 614 660 718 847 970 1114 1417 1618 1800 1618 1428 1070 834 650 521 465 368 421 379 372 372 347 392 375 398 445 412 439 445 485 517 559 577 562 496 464 436 433 389 378 392 367 330 392 360 417 454 589 664 779 954 1093 1325 1441 1401 1284 1262 1140 1075 1026 907 738 602 514 471 424 420 432 390 391 414 428 447 528 507 538 634 809 899 885 827 719 650 486 367 318 291 288 279 267 283 248 244 239 230 262 256 296 264 244 245 281 235 254 284 304 271 278 310 294 284 340 251 302 320 292 298 233 261 286 283 294 292 305 261 313 306 337 365 396 418 465 503 625 713 855 938 1118 1200 1279 1252 1094 1194 1195 1360 1469 1280 1108 961 778 570 542 465 402 380 381 367 298 304 340 307 300 316 305 265 311 271 282 306 327 348 299 327 357 376 409 421 472 487 575 713 790 931 1164 1410 1736 2123 2666 3151 3461 3476 3048 2285 1938 1328 940 734 639 568 519 456 433 412 368 352 333 323 334 298 310 312 342 335 317 329 341 327 337 295 325 322 314 339 339 339 319 373 409 442 423 443 437 428 404 367 317 280 287 272 242 237 276 250 248 246 261 267 239 295 305 267 332 339 355 369 433 546 586 666 751 832 902 659 615 565 541 431 404 438 526 563 623 674 777 897 1061 1074 958 713 659 558 368 310 300 297 253 312 260 300 278 248 272 320 320 347 318 340 338 343 367 379 389 414 408 421 519 538 565 691 787 859 950 993 892 684 633 515 397 346 337 310 293 298 282 262 299 307 333 311 373 356 409 427 450 520 572 661 826 871 1071 1163 1295 1410 1475 1743 1857 1917 1591 1356 1210 1139 985 801 871 988 967 1115 1226 1049 1028 920 853 740 637 605 613 689 820 924 999 1205 1421 1594 1916 1819 1507 1309 1055 800 602 508 497 423 419 404 362 424 405 413 430 478 498 548 586 608 686 703 748 809 707 619 579 537 453 383 396 381 383 374 391 369 380 363 383 388 364 345 349 384 336 369 394 377 380 338 416 407 420 476 490 534 639 682 727 856 1045 1163 1349 1577 1647 1647 1410 1183 996 867 640 476 480 345 397 345 372 396 354 361 388 381 419 409 422 410 449 389 369 357 308 286 342 309 313 284 306 323 318 310 317 276 305 326 355 342 353 361 335 354 371 372 394 377 387 392 400 406 382 367 408 385 397 398 401 427 405 377 425 351 360 342 331 304 319 331 321 302 370 344 404 389 400 388 385 440 381 446 471 513 515 587 586 690 811 902 893 1065 1127 1160 1244 1377 1526 1648 1800 1923 1878 1700 1555 1491 1357 1070 847 752 605 500 418 390 341 308 316 283 305 298 285 320 298 318 289 261 296 287 299 279 282 295 293 320 293 278 312 288 283 318 301 332 341 342 355 359 412 428 492 478 559 534 486 501 483 536 475 460 508 499 488 414 385 376 340 303 317 301 274 290 289 261 277 295 295 263 249 300 295 264 307 268 283 325 304 283 256 272 307 330 288 315 295 326 303 319 317 331 298 340 320 309 335 330 353 328 359 391 400 399 439 422 463 451 594 622 667 718 757 802 776 741 637 667 548 593 522 538 513 478 491 508 448 402 377 364 395 354 333 334 313 300 312 315 295 322 300 318 300 300 366 351 366 384 415 447 441 493 485 493 501 448 447 477 409 471 401 378 401 393 411 382 404 430 447 479 525 588 662 709 670 700 663 674 591 575 475 458 393 365 363 389 379 395 399 487 475 566 604 642 773 887 924 1038 1217 1364 1597 1505 1469 1150 948 928 817 622 548 402 364 346 357 335 299 293 283 297 292 317 334 322 299 298 315 341 369 372 338 351 369 342 394 357 384 320 341 396 360 415 380 417 379 359 381 377 376 408 376 382 434 445 502 509 551 641 687 637 610 590 532 445 452 387 349 333 309 334 343 297 285 298 315 311 284 278 264 270 283 288 299 291 276 269 267 270 268 264 294 316 251 286 295 288 285 293 315 284 269 279 288 286 336 278 319 351 337 359 382 425 445 494 523 573 609 676 738 773 785 888 807 822 672 577 618 551 473 454 343 335 341 315 354 329 334 362 350 349 362 404 422 430 491 466 516 508 488 412 419 425 430 401 420 420 411 430 422 427 423 357 345 323 326 276 279 275 246 254 230 251 231 247 230 248 266 226 203 222 248 242 233 218 253 246 220 220 215 239 243 233 232 245 235 210 239 237 239 250 225 244 212 210 208 222 248 266 197 229 225 221 233 228 249 272 250 247 249 260 293 257 297 281 305 311 326 318 320"}}}}}}'
  
// const options = {
//   hostname: 'localhost',
//   port: 8079,
//   path: '/',
//   method: 'POST',
//   headers: {
//     'Content-Type': 'application/json',
//     'Content-Length': data.length
//   }
// }

// const req = http.request(options, res => {
//   console.log(`statusCode: ${res.statusCode}`)

//   res.on('data', d => {
//     process.stdout.write(d)
//   })
// })

// // req.on('error', error => {
// //   console.error(error)
// // })

// req.write(data)
// req.end()"xRayTube": {"@id": "1010041", "@name": "Empyrean Cu LFF (9430 033 7300x) DK422414", "tension": {"@unit": "kV", "#text": "40"}, "current": {"@unit": "mA", "#text": "30"}, "anodeMaterial": "Cu", "focus": {"@type": "Line", "length": {"@unit": "mm", "#text": "12.0"}, "width": {"@unit": "mm", "#text": "0.4"}, "takeOffAngle": {"@unit": "deg", "#text": "6.0"}}}, "sollerSlit": {"@id": "21010002", "@name": "Soller slits 0.04 rad.", "opening": {"@unit": "rad", "#text": "0.0400"}}, "mask": {"@id": "22080002", "@name": "Fixed incident beam mask 10 mm", "width": {"@unit": "mm", "#text": "6.60"}}, "divergenceSlit": {"@id": "22010007", "@name": "Fixed slit 1/8\u00b0", "@xsi:type": "fixedDivergenceSlitType", "distanceToSample": {"@unit": "mm", "#text": "140.00"}, "height": {"@unit": "mm", "#text": "0.19"}}}, "beamKnife": {"@id": "29010002", "@name": "Beam knife for MPD systems"}, "diffractedBeamPath": {"radius": {"@unit": "mm", "#text": "240.00"}, "antiScatterSlit": {"@id": "22110006", "@name": "AS slit 6.4 mm (PIXcel & Monochr.)", "@xsi:type": "fixedAntiScatterSlitType", "height": {"@unit": "mm", "#text": "6.40"}}, "sollerSlit": {"@id": "21010002", "@name": "Soller slits 0.04 rad.", "opening": {"@unit": "rad", "#text": "0.0400"}}, "monochromator": {"@id": "23010033", "@name": "Diffracted beam monochr. for PIXcel and Cu", "@hybrid": "false", "crystal": {"@type": "Symmetric", "@shape": "Flat", "#text": "C"}, "numberOfReflections": "1", "hkl": {"h": "0", "k": "0", "l": "2"}}, "detector": {"@id": "7010015", "@name": "PIXcel1D detector", "@xsi:type": "rtmsDetectorType", "phd": {"lowerLevel": {"@unit": "%", "#text": "25.0"}, "upperLevel": {"@unit": "%", "#text": "70.0"}}, "mode": "Scanning", "activeLength": {"@unit": "deg", "#text": "3.347"}}}, "scan": {"@appendNumber": "0", "@mode": "Continuous", "@scanAxis": "Gonio", "@status": "Completed", "header": {"startTimeStamp": "2019-08-26T11:38:08-03:00", "endTimeStamp": "2019-08-26T12:08:17-03:00", "author": {"name": "user"}, "source": {"applicationSoftware": {"@version": "4.1", "#text": "Data Collector"}, "instrumentControlSoftware": {"@version": "2.2 ", "#text": "XPERT-PRO"}, "instrumentID": "0000000011123213"}}, "dataPoints": {"positions": [{"@axis": "2Theta", "@unit": "deg", "startPosition": "3.00713028", "endPosition": "49.98728108"}, {"@axis": "Omega", "@unit": "deg", "startPosition": "1.50356514", "endPosition": "24.99364054"}, {"@axis": "Phi", "@unit": "deg", "commonPosition": "116.2"}], "commonCountingTime": {"@unit": "seconds", "#text": "236.640"}, "intensities": {"@unit": "counts", "#text": "327 300 349 281 293 270 255 270 284 268 262 270 247 243 250 248 229 218 265 255 253 209 227 237 204 213 179 178 186 192 180 184 178 159 173 179 155 160 165 177 152 183 161 133 132 135 149 136 168 157 139 147 132 142 131 131 137 143 140 141 123 129 156 128 142 132 132 142 159 147 153 149 153 139 152 159 168 154 168 206 189 172 152 178 192 201 214 209 231 232 227 217 179 181 167 139 138 116 134 119 147 136 119 139 124 121 123 116 130 134 130 154 117 133 133 134 138 130 133 151 122 122 131 131 119 115 154 127 153 145 153 138 160 168 172 164 173 200 227 211 273 278 333 457 617 744 869 782 543 343 250 212 177 152 159 145 175 171 176 151 146 131 146 165 160 167 160 151 146 149 146 147 132 160 162 128 138 154 172 154 149 131 185 162 163 168 180 179 160 177 149 161 160 160 156 147 158 195 182 206 202 223 248 294 298 278 266 238 182 172 180 174 141 164 146 154 157 163 187 159 139 160 152 161 165 162 171 188 153 157 144 191 146 152 174 179 154 183 160 167 179 176 167 146 183 175 173 182 212 205 248 277 316 313 327 310 253 207 200 185 183 170 157 167 189 159 175 182 173 203 162 156 182 184 207 276 247 304 412 560 765 1154 1651 2337 2504 1647 689 343 232 222 170 199 168 205 200 188 164 176 143 164 174 192 154 181 157 209 167 167 171 158 175 183 207 199 206 204 253 297 368 435 590 665 664 444 256 234 162 198 205 186 186 174 185 206 204 222 218 218 238 207 196 182 189 209 178 184 196 168 187 176 181 184 166 187 164 197 168 168 199 186 200 168 185 176 154 194 216 210 189 196 194 210 197 192 235 209 225 251 251 256 285 324 379 378 459 518 613 697 655 645 506 407 386 326 327 282 264 272 255 283 294 310 335 348 399 423 453 509 475 482 500 435 370 341 349 328 309 339 331 328 363 345 312 326 338 357 340 362 406 401 420 514 513 674 751 946 1372 1903 2536 3829 4835 6084 6487 5033 3024 1573 749 608 521 418 418 416 383 413 415 395 383 413 403 423 386 419 379 430 471 397 436 456 475 431 390 371 379 407 376 395 378 383 426 439 449 496 492 465 423 386 372 366 390 376 379 359 371 414 403 420 486 434 519 470 444 430 423 387 400 367 363 343 389 418 348 409 393 432 410 405 489 498 615 789 969 1309 1680 2290 2852 2985 2417 1626 1115 924 792 796 652 603 474 468 428 402 423 370 392 357 323 358 385 389 421 390 452 400 462 415 403 363 333 336 339 308 339 318 312 315 313 337 315 316 297 354 364 344 350 332 309 320 321 307 334 360 342 344 357 374 380 349 429 432 463 513 561 658 752 1027 1326 1753 2279 3107 4422 6023 8070 10051 10563 8436 5528 3146 2011 1725 1768 1797 1709 1535 1507 1632 1610 1601 1399 1048 810 598 507 481 503 509 514 628 609 640 692 637 614 552 562 594 637 635 708 662 609 490 492 407 434 401 414 399 446 417 451 504 480 501 527 490 540 538 576 684 762 909 1181 1452 1914 2349 3198 4029 4149 3357 2259 1591 1013 929 918 895 948 933 910 807 798 740 721 785 897 1050 1279 1710 2267 2865 3605 4226 5137 5652 5090 3724 2425 1430 917 758 692 657 634 595 630 679 683 689 809 996 1130 1335 1618 2066 2577 3017 3087 2616 1972 1539 1212 1087 1090 1045 951 905 807 805 802 800 788 811 840 844 891 939 955 945 1016 1012 957 1032 1118 1061 1034 1101 1151 1128 1221 1299 1333 1464 1411 1425 1355 1139 1182 1064 1041 1059 1082 1050 1098 1045 936 993 1058 1085 1009 1111 1191 1364 1561 2017 2501 3196 4232 5709 7379 9026 10156 9291 6641 4626 2575 1509 1072 890 862 799 729 671 669 679 647 644 620 632 597 530 539 496 487 439 447 450 421 448 458 440 492 505 516 542 575 618 594 632 560 579 571 564 614 660 718 847 970 1114 1417 1618 1800 1618 1428 1070 834 650 521 465 368 421 379 372 372 347 392 375 398 445 412 439 445 485 517 559 577 562 496 464 436 433 389 378 392 367 330 392 360 417 454 589 664 779 954 1093 1325 1441 1401 1284 1262 1140 1075 1026 907 738 602 514 471 424 420 432 390 391 414 428 447 528 507 538 634 809 899 885 827 719 650 486 367 318 291 288 279 267 283 248 244 239 230 262 256 296 264 244 245 281 235 254 284 304 271 278 310 294 284 340 251 302 320 292 298 233 261 286 283 294 292 305 261 313 306 337 365 396 418 465 503 625 713 855 938 1118 1200 1279 1252 1094 1194 1195 1360 1469 1280 1108 961 778 570 542 465 402 380 381 367 298 304 340 307 300 316 305 265 311 271 282 306 327 348 299 327 357 376 409 421 472 487 575 713 790 931 1164 1410 1736 2123 2666 3151 3461 3476 3048 2285 1938 1328 940 734 639 568 519 456 433 412 368 352 333 323 334 298 310 312 342 335 317 329 341 327 337 295 325 322 314 339 339 339 319 373 409 442 423 443 437 428 404 367 317 280 287 272 242 237 276 250 248 246 261 267 239 295 305 267 332 339 355 369 433 546 586 666 751 832 902 659 615 565 541 431 404 438 526 563 623 674 777 897 1061 1074 958 713 659 558 368 310 300 297 253 312 260 300 278 248 272 320 320 347 318 340 338 343 367 379 389 414 408 421 519 538 565 691 787 859 950 993 892 684 633 515 397 346 337 310 293 298 282 262 299 307 333 311 373 356 409 427 450 520 572 661 826 871 1071 1163 1295 1410 1475 1743 1857 1917 1591 1356 1210 1139 985 801 871 988 967 1115 1226 1049 1028 920 853 740 637 605 613 689 820 924 999 1205 1421 1594 1916 1819 1507 1309 1055 800 602 508 497 423 419 404 362 424 405 413 430 478 498 548 586 608 686 703 748 809 707 619 579 537 453 383 396 381 383 374 391 369 380 363 383 388 364 345 349 384 336 369 394 377 380 338 416 407 420 476 490 534 639 682 727 856 1045 1163 1349 1577 1647 1647 1410 1183 996 867 640 476 480 345 397 345 372 396 354 361 388 381 419 409 422 410 449 389 369 357 308 286 342 309 313 284 306 323 318 310 317 276 305 326 355 342 353 361 335 354 371 372 394 377 387 392 400 406 382 367 408 385 397 398 401 427 405 377 425 351 360 342 331 304 319 331 321 302 370 344 404 389 400 388 385 440 381 446 471 513 515 587 586 690 811 902 893 1065 1127 1160 1244 1377 1526 1648 1800 1923 1878 1700 1555 1491 1357 1070 847 752 605 500 418 390 341 308 316 283 305 298 285 320 298 318 289 261 296 287 299 279 282 295 293 320 293 278 312 288 283 318 301 332 341 342 355 359 412 428 492 478 559 534 486 501 483 536 475 460 508 499 488 414 385 376 340 303 317 301 274 290 289 261 277 295 295 263 249 300 295 264 307 268 283 325 304 283 256 272 307 330 288 315 295 326 303 319 317 331 298 340 320 309 335 330 353 328 359 391 400 399 439 422 463 451 594 622 667 718 757 802 776 741 637 667 548 593 522 538 513 478 491 508 448 402 377 364 395 354 333 334 313 300 312 315 295 322 300 318 300 300 366 351 366 384 415 447 441 493 485 493 501 448 447 477 409 471 401 378 401 393 411 382 404 430 447 479 525 588 662 709 670 700 663 674 591 575 475 458 393 365 363 389 379 395 399 487 475 566 604 642 773 887 924 1038 1217 1364 1597 1505 1469 1150 948 928 817 622 548 402 364 346 357 335 299 293 283 297 292 317 334 322 299 298 315 341 369 372 338 351 369 342 394 357 384 320 341 396 360 415 380 417 379 359 381 377 376 408 376 382 434 445 502 509 551 641 687 637 610 590 532 445 452 387 349 333 309 334 343 297 285 298 315 311 284 278 264 270 283 288 299 291 276 269 267 270 268 264 294 316 251 286 295 288 285 293 315 284 269 279 288 286 336 278 319 351 337 359 382 425 445 494 523 573 609 676 738 773 785 888 807 822 672 577 618 551 473 454 343 335 341 315 354 329 334 362 350 349 362 404 422 430 491 466 516 508 488 412 419 425 430 401 420 420 411 430 422 427 423 357 345 323 326 276 279 275 246 254 230 251 231 247 230 248 266 226 203 222 248 242 233 218 253 246 220 220 215 239 243 233 232 245 235 210 239 237 239 250 225 244 212 210 208 222 248 266 197 229 225 221 233 228 249 272 250 247 249 260 293 257 297 281 305 311 326 318 320"}}}}}}'
  
// const options = {
//   hostname: 'localhost',
//   port: 8079,
//   path: '/',
//   method: 'POST',
//   headers: {
//     'Content-Type': 'application/json',
//     'Content-Length': data.length
//   }
// }

// const req = http.request(options, res => {
//   console.log(`statusCode: ${res.statusCode}`)

//   res.on('data', d => {
//     process.stdout.write(d)
//   })
// })

// // req.on('error', error => {
// //   console.error(error)
// // })

// req.write(data)
// req.end()

// ////////////
// // const http = require('http')
// // const options = {
// //   hostname: 'localhost',
// //   port: 8079,
// //   path: '/',
// //   method: 'POST'
// // }

// // const req = http.request(options, res => {
// //   console.log(`statusCode: ${res.statusCode}`)

// //   res.on('data', d => {
// //     process.stdout.write(d)
// //   })
// //   req.on('error', function(erro){
// //     console.log(error);
// //   })
// // })

// // req.on('error', error => {
// //   console.error(error)
// // })

// // req.end()

// // http.get(options, function(res){
// //   console.log(res.statusCode);
// //   var body  = '';

// //   res.on('data',function(dados){
// //       body += dados;
// //   });

// //   res.end('end', function(){
// //       console.log(body);
// //   });

// // }).on('error', function(error){
// //   console.log(error.message);
// // });


// var http = require('http');
// http.createServer(function (req, res) {
//   res.writeHead(200, {'Content-Type': 'text/plain'});
//   res.end('Hello World\n');
// }).listen(8124, "0.0.0.0");
// console.log('Server running at http://0.0.0.0:8124/');


const http = require('http');

http.createServer((request, response) => {
  const { headers, method, url } = request;
  let body = [];
  request.on('error', (err) => {
    console.error(err);
  }).on('data', (chunk) => {
    body.push(chunk);
  }).on('end', () => {
    body = Buffer.concat(body).toString();
    console.log(body)
    // At this point, we have the headers, method, url and body, and can now
    // do whatever we need to in order to respond to this request.
  });
}).listen(8080); // Activates this server, listening on port 8080.